version: '3.8'

services:
  mongo-primary:
    image: mongo:6.0
    container_name: mongo-primary
    command: [ "--replSet", "rs0", "--bind_ip_all" ]
    ports:
      - "27017:27017"
    volumes:
      - mongo_data_primary:/data/db
    networks:
      - crackhash_net

  mongo-secondary1:
    image: mongo:6.0
    container_name: mongo-secondary1
    command: [ "--replSet", "rs0", "--bind_ip_all" ]
    volumes:
      - mongo_data_secondary1:/data/db
    networks:
      - crackhash_net

  mongo-secondary2:
    image: mongo:6.0
    container_name: mongo-secondary2
    command: [ "--replSet", "rs0", "--bind_ip_all" ]
    volumes:
      - mongo_data_secondary2:/data/db
    networks:
      - crackhash_net

  mongo-init-replica:
    image: mongo:6.0
    container_name: mongo-init-replica
    depends_on:
      - mongo-primary
      - mongo-secondary1
      - mongo-secondary2
    networks:
      - crackhash_net
    entrypoint: [
      "sh", "-c",
      "
        sleep 10 &&
        mongosh --host mongo-primary:27017 --eval '
          rs.initiate({
            _id: \"rs0\",
            members: [
              { _id: 0, host: \"mongo-primary:27017\" },
              { _id: 1, host: \"mongo-secondary1:27017\" },
              { _id: 2, host: \"mongo-secondary2:27017\" }
            ]
          })
        '
      "
    ]

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo-primary
      ME_CONFIG_BASICAUTH: "false"
    ports:
      - "8081:8081"
    depends_on:
      - mongo-primary
    networks:
      - crackhash_net
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - crackhash_net
    restart: always

  manager:
    container_name: manager
    build: ./manager
    ports:
      - "3000:3000"
    networks:
      - crackhash_net
    depends_on:
      - worker1
      - worker2
      - worker3
      - mongo-primary
      - rabbitmq

  worker1:
    build: ./worker
    environment:
      - WORKER_NAME=worker1
    networks:
      - crackhash_net

  worker2:
    build: ./worker
    environment:
      - WORKER_NAME=worker2
    networks:
      - crackhash_net

  worker3:
    build: ./worker
    environment:
      - WORKER_NAME=worker3
    networks:
      - crackhash_net

volumes:
  mongo_data_primary:
  mongo_data_secondary1:
  mongo_data_secondary2:

networks:
  crackhash_net:
    driver: bridge
